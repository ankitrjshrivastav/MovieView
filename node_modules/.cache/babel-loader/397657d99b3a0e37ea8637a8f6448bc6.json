{"ast":null,"code":"var _jsxFileName = \"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Trending/Trending.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport \"./Trending.css\";\nimport { useEffect, useState } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport Genres from \"../../components/Genres/Genres\";\nimport useGenre from \"../../hooks/useGenre\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Trending = () => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const genreforURL = useGenre(selectedGenres);\n  console.log(\"hello\", genreforURL);\n\n  const fetchTrending = async () => {\n    // const apiKey = \"d310343\"; // Your OMDb API key\n    // const searchTerm = \"Inception\";\n    // // const page = 1; // Pagination page number\n    // const { data } = await axios.get(\n    //   // `https://api.themoviedb.org/3/trending/all/day?api_key=89c1beb1c605b68a9af79953628d7745&page=${page}`\n    //   `http://www.omdbapi.com/?s=${encodeURIComponent(\n    //     searchTerm\n    //   )}&page=${page}&apikey=${apiKey}`\n    // );\n    console.log(\"gev\", genreforURL);\n    const apiKey = \"d310343\"; // Replace with your actual OMDb API key\n\n    const year = \"2021\"; // Example year filter\n\n    const page = 1; // Pagination if needed\n\n    const url = `http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&y=${year}&page=${page}`;\n    const {\n      data\n    } = await axios.get(`http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&y=${year}&page=${page}`);\n    console.log(\"ankit\", data);\n    setContent(data.Search);\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchTrending(); // eslint-disable-next-line\n  }, [page, genreforURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \" \\uD83D\\uDE0E Trending \\uD83D\\uDE1C \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), console.log(\"ast\", selectedGenres), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"tv\",\n      selectedGenres: selectedGenres,\n      setSelectedGenres: setSelectedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.imdbID,\n        poster: c.Poster,\n        title: c.Title || c.name,\n        date: c.first_air_date || c.Year,\n        media_type: c.Type,\n        vote_average: c.vote_average\n      }, c.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Trending, \"gd6kYQfn9ktqRJ7D4y+a9VWliqA=\", false, function () {\n  return [useGenre];\n});\n\n_c = Trending;\nexport default Trending;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trending\");","map":{"version":3,"sources":["/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Trending/Trending.js"],"names":["axios","useEffect","useState","SingleContent","CustomPagination","Genres","useGenre","Trending","page","setPage","content","setContent","genres","setGenres","selectedGenres","setSelectedGenres","genreforURL","console","log","fetchTrending","apiKey","year","url","data","get","Search","window","scroll","map","c","imdbID","Poster","Title","name","first_air_date","Year","Type","vote_average"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport \"./Trending.css\";\nimport { useEffect, useState } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport Genres from \"../../components/Genres/Genres\";\nimport useGenre from \"../../hooks/useGenre\";\n\nconst Trending = () => {\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const genreforURL = useGenre(selectedGenres);\n  console.log(\"hello\", genreforURL);\n  const fetchTrending = async () => {\n    // const apiKey = \"d310343\"; // Your OMDb API key\n    // const searchTerm = \"Inception\";\n    // // const page = 1; // Pagination page number\n    // const { data } = await axios.get(\n\n    //   // `https://api.themoviedb.org/3/trending/all/day?api_key=89c1beb1c605b68a9af79953628d7745&page=${page}`\n    //   `http://www.omdbapi.com/?s=${encodeURIComponent(\n    //     searchTerm\n    //   )}&page=${page}&apikey=${apiKey}`\n    // );\n    console.log(\"gev\", genreforURL);\n    const apiKey = \"d310343\"; // Replace with your actual OMDb API key\n    const year = \"2021\"; // Example year filter\n    const page = 1; // Pagination if needed\n    const url = `http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&y=${year}&page=${page}`;\n    const { data } = await axios.get(\n      `http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&y=${year}&page=${page}`\n    );\n    console.log(\"ankit\", data);\n\n    setContent(data.Search);\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchTrending();\n    // eslint-disable-next-line\n  }, [page, genreforURL]);\n\n  return (\n    <div>\n      <span className=\"pageTitle\"> ðŸ˜Ž Trending ðŸ˜œ </span>\n      {console.log(\"ast\", selectedGenres)}\n      <Genres\n        type=\"tv\"\n        selectedGenres={selectedGenres}\n        setSelectedGenres={setSelectedGenres}\n        genres={genres}\n        setGenres={setGenres}\n        setPage={setPage}\n      />\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.imdbID}\n              id={c.imdbID}\n              poster={c.Poster}\n              title={c.Title || c.name}\n              date={c.first_air_date || c.Year}\n              media_type={c.Type}\n              vote_average={c.vote_average}\n            />\n          ))}\n      </div>\n      <CustomPagination setPage={setPage} />\n    </div>\n  );\n};\n\nexport default Trending;\n"]},"metadata":{},"sourceType":"module"}
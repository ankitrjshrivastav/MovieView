{"ast":null,"code":"var _jsxFileName = \"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/ContentModal/ContentModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ContentModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContentModal(_ref) {\n  _s();\n\n  let {\n    children,\n    media_type,\n    id\n  } = _ref;\n  const [content, setContent] = useState();\n  const [savedMovieId, setSavedMovieId] = useState(null);\n  const [saved, setSaved] = useState(\"\");\n\n  const fetchData = async () => {\n    const {\n      data\n    } = await axios.get(`http://www.omdbapi.com/?i=${id}&apikey=d310343`);\n    setContent(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n    const savedMovie = localStorage.getItem(\"savedMovies\");\n\n    if (savedMovie) {\n      const movieData = JSON.parse(savedMovie);\n    } // eslint-disable-next-line\n\n  }, [content]);\n\n  const handleSaveToLocalStorage = () => {\n    if (content) {\n      const savedMovies = JSON.parse(localStorage.getItem(\"savedMovies\")) || []; // If the movie is already saved, remove it\n\n      if (savedMovies.some(movie => movie.imdbID === content.imdbID)) {\n        const updatedMovies = savedMovies.filter(movie => movie && movie.imdbID !== content.imdbID);\n        localStorage.setItem(\"savedMovies\", JSON.stringify(updatedMovies));\n        alert(\"Movie removed from saved list!\");\n      } else {\n        // If the movie is not saved, add it\n        savedMovies.push(content);\n        localStorage.setItem(\"savedMovies\", JSON.stringify(savedMovies));\n        alert(\"Movie saved successfully!\");\n      } // Update the savedMovieId to reflect the current movie ID\n\n\n      setSavedMovieId(content.imdbID);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      type: \"button\",\n      className: \"media\",\n      onClick: handleSaveToLocalStorage,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContentModal, \"IlDxgIVLcNYSX9ouL69gsJwPrEg=\");\n\n_c = ContentModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentModal\");","map":{"version":3,"sources":["/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/ContentModal/ContentModal.js"],"names":["React","useEffect","useState","axios","ContentModal","children","media_type","id","content","setContent","savedMovieId","setSavedMovieId","saved","setSaved","fetchData","data","get","savedMovie","localStorage","getItem","movieData","JSON","parse","handleSaveToLocalStorage","savedMovies","some","movie","imdbID","updatedMovies","filter","setItem","stringify","alert","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAEA,eAAe,SAASC,YAAT,OAAoD;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA;AAAxB,GAA8B;AACjE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMY,SAAS,GAAG,YAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CACpB,6BAA4BT,EAAG,iBADX,CAAvB;AAGAE,IAAAA,UAAU,CAACM,IAAD,CAAV;AACD,GALD;;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS;AACT,UAAMG,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAnB;;AAEA,QAAIF,UAAJ,EAAgB;AACd,YAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAlB;AACD,KANa,CAOd;;AACD,GARQ,EAQN,CAACT,OAAD,CARM,CAAT;;AAUA,QAAMe,wBAAwB,GAAG,MAAM;AACrC,QAAIf,OAAJ,EAAa;AACX,YAAMgB,WAAW,GAAGH,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,KAAmD,EAAvE,CADW,CAGX;;AACA,UAAIK,WAAW,CAACC,IAAZ,CAAkBC,KAAD,IAAWA,KAAK,CAACC,MAAN,KAAiBnB,OAAO,CAACmB,MAArD,CAAJ,EAAkE;AAChE,cAAMC,aAAa,GAAGJ,WAAW,CAACK,MAAZ,CACnBH,KAAD,IAAWA,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiBnB,OAAO,CAACmB,MADzB,CAAtB;AAIAT,QAAAA,YAAY,CAACY,OAAb,CAAqB,aAArB,EAAoCT,IAAI,CAACU,SAAL,CAAeH,aAAf,CAApC;AACAI,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACD,OAPD,MAOO;AACL;AACAR,QAAAA,WAAW,CAACS,IAAZ,CAAiBzB,OAAjB;AACAU,QAAAA,YAAY,CAACY,OAAb,CAAqB,aAArB,EAAoCT,IAAI,CAACU,SAAL,CAAeP,WAAf,CAApC;AACAQ,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACD,OAhBU,CAkBX;;;AACArB,MAAAA,eAAe,CAACH,OAAO,CAACmB,MAAT,CAAf;AACD;AACF,GAtBD;;AAwBA,sBACE;AAAA,2BACE;AAAK,MAAA,IAAI,EAAC,QAAV;AAAmB,MAAA,SAAS,EAAC,OAA7B;AAAqC,MAAA,OAAO,EAAEJ,wBAA9C;AAAA,gBACGlB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GApDuBD,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ContentModal.css\";\n\nexport default function ContentModal({ children, media_type, id }) {\n  const [content, setContent] = useState();\n  const [savedMovieId, setSavedMovieId] = useState(null);\n  const [saved, setSaved] = useState(\"\");\n  const fetchData = async () => {\n    const { data } = await axios.get(\n      `http://www.omdbapi.com/?i=${id}&apikey=d310343`\n    );\n    setContent(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n    const savedMovie = localStorage.getItem(\"savedMovies\");\n\n    if (savedMovie) {\n      const movieData = JSON.parse(savedMovie);\n    }\n    // eslint-disable-next-line\n  }, [content]);\n\n  const handleSaveToLocalStorage = () => {\n    if (content) {\n      const savedMovies = JSON.parse(localStorage.getItem(\"savedMovies\")) || [];\n\n      // If the movie is already saved, remove it\n      if (savedMovies.some((movie) => movie.imdbID === content.imdbID)) {\n        const updatedMovies = savedMovies.filter(\n          (movie) => movie && movie.imdbID !== content.imdbID\n        );\n\n        localStorage.setItem(\"savedMovies\", JSON.stringify(updatedMovies));\n        alert(\"Movie removed from saved list!\");\n      } else {\n        // If the movie is not saved, add it\n        savedMovies.push(content);\n        localStorage.setItem(\"savedMovies\", JSON.stringify(savedMovies));\n        alert(\"Movie saved successfully!\");\n      }\n\n      // Update the savedMovieId to reflect the current movie ID\n      setSavedMovieId(content.imdbID);\n    }\n  };\n\n  return (\n    <div>\n      <div type=\"button\" className=\"media\" onClick={handleSaveToLocalStorage}>\n        {children}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
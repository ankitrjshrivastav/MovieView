{"ast":null,"code":"var _jsxFileName = \"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport { Button, createMuiTheme, Tab, Tabs, TextField, ThemeProvider } from \"@material-ui/core\";\nimport \"./Search.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  // const [type, setType] = useState(0);\n  const [searchText, setSearchText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\"\n      }\n    }\n  });\n\n  const fetchSearch = async () => {\n    try {\n      const apiKey = \"d310343\"; // Your OMDb API key\n\n      const searchTerm = \"Inception\"; // const page = 1; // Pagination page number\n      // const { data } = await axios.get(\n      //   // `https://api.themoviedb.org/3/trending/all/day?api_key=89c1beb1c605b68a9af79953628d7745&page=${page}`\n      //   `http://www.omdbapi.com/?s=${encodeURIComponent(\n      //     searchTerm\n      //   )}&page=${page}&apikey=${apiKey}`\n\n      console.log(\"ankittt\", searchText);\n      const {\n        data\n      } = await axios.get( // `https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US&query=${searchText}&page=${page}&include_adult=false`\n      `http://www.omdbapi.com/?apikey=${apiKey}&s=${encodeURIComponent(searchText)}&type=movie&page=${page}`);\n      console.log(\"19999\", data, searchText);\n      setContent(data.Search); //setNumOfPages(data.total_pages);\n      // console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSearch(); // eslint-disable-next-line\n  }, [page, searchText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            flex: 1\n          },\n          className: \"searchBox\",\n          label: \"Search\",\n          variant: \"filled\",\n          onChange: e => setSearchText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: fetchSearch,\n          variant: \"contained\",\n          style: {\n            marginLeft: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: [content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.imdbID,\n        poster: c.Poster,\n        title: c.Title || c.name,\n        date: c.first_air_date || c.Year,\n        media_type: c.Type,\n        vote_average: c.vote_average\n      }, c.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)), searchText && !content && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"TdeT9GXF3bm13Tlv3A9PReE5QKQ=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Search/Search.js"],"names":["Button","createMuiTheme","Tab","Tabs","TextField","ThemeProvider","SearchIcon","useEffect","useState","axios","CustomPagination","SingleContent","Search","searchText","setSearchText","page","setPage","content","setContent","numOfPages","setNumOfPages","darkTheme","palette","type","primary","main","fetchSearch","apiKey","searchTerm","console","log","data","get","encodeURIComponent","error","window","scroll","flex","e","target","value","marginLeft","map","c","imdbID","Poster","Title","name","first_air_date","Year","Type","vote_average"],"mappings":"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","sourcesContent":["import {\n  Button,\n  createMuiTheme,\n  Tab,\n  Tabs,\n  TextField,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport \"./Search.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\n\nconst Search = () => {\n  // const [type, setType] = useState(0);\n  const [searchText, setSearchText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\",\n      },\n    },\n  });\n\n  const fetchSearch = async () => {\n    try {\n      const apiKey = \"d310343\"; // Your OMDb API key\n\n      const searchTerm = \"Inception\";\n\n      // const page = 1; // Pagination page number\n      // const { data } = await axios.get(\n      //   // `https://api.themoviedb.org/3/trending/all/day?api_key=89c1beb1c605b68a9af79953628d7745&page=${page}`\n      //   `http://www.omdbapi.com/?s=${encodeURIComponent(\n      //     searchTerm\n      //   )}&page=${page}&apikey=${apiKey}`\n      console.log(\"ankittt\", searchText);\n      const { data } = await axios.get(\n        // `https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US&query=${searchText}&page=${page}&include_adult=false`\n\n        `http://www.omdbapi.com/?apikey=${apiKey}&s=${encodeURIComponent(\n          searchText\n        )}&type=movie&page=${page}`\n      );\n      console.log(\"19999\", data, searchText);\n      setContent(data.Search);\n      //setNumOfPages(data.total_pages);\n      // console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSearch();\n    // eslint-disable-next-line\n  }, [page, searchText]);\n\n  return (\n    <div>\n      <ThemeProvider theme={darkTheme}>\n        <div className=\"search\">\n          <TextField\n            style={{ flex: 1 }}\n            className=\"searchBox\"\n            label=\"Search\"\n            variant=\"filled\"\n            onChange={(e) => setSearchText(e.target.value)}\n          />\n          <Button\n            onClick={fetchSearch}\n            variant=\"contained\"\n            style={{ marginLeft: 10 }}\n          >\n            <SearchIcon fontSize=\"large\" />\n          </Button>\n        </div>\n        {/* <Tabs\n          value={type}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={(event, newValue) => {\n            setType(newValue);\n            setPage(1);\n          }}\n          style={{ paddingBottom: 6 }}\n          aria-label=\"disabled tabs example\"\n        >\n          <Tab style={{ width: \"50%\" }} label=\"Search Movies\" />\n          <Tab style={{ width: \"50%\" }} label=\"Search TV Series\" />\n        </Tabs> */}\n      </ThemeProvider>\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.imdbID}\n              id={c.imdbID}\n              poster={c.Poster}\n              title={c.Title || c.name}\n              date={c.first_air_date || c.Year}\n              media_type={c.Type}\n              vote_average={c.vote_average}\n            />\n          ))}\n        {searchText && !content && <h2>No Movies Found</h2>}\n      </div>\n      {/* {numOfPages > 1 && (\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n      )} */}\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}
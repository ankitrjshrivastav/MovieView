{"ast":null,"code":"var _jsxFileName = \"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport Genres from \"../../components/Genres\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport useGenre from \"../../hooks/useGenre\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const genreforURL = useGenre(selectedGenres); // console.log(selectedGenres);\n\n  const fetchMovies = async () => {\n    const apiKey = \"d310343\"; // Replace with your actual OMDb API key\n\n    const year = \"2021\"; // Example year filter\n\n    const page = 1; // Pagination if needed\n\n    const url = `http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&y=${year}&page=${page}`;\n    const {\n      data\n    } = await axios.get(`http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&y=${year}&page=${page}`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchMovies(); // eslint-disable-next-line\n  }, [genreforURL, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \" \\uD83D\\uDD25\\uD83D\\uDD25play movies\\uD83D\\uDD25\\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"movie\",\n      selectedGenres: selectedGenres,\n      setSelectedGenres: setSelectedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: \"movie\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"XK1YKfc94s2l+Ob0biLUcn7v/6s=\", false, function () {\n  return [useGenre];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Movies/Movies.js"],"names":["axios","useEffect","useState","SingleContent","Genres","CustomPagination","useGenre","Movies","genres","setGenres","selectedGenres","setSelectedGenres","page","setPage","content","setContent","numOfPages","setNumOfPages","genreforURL","fetchMovies","apiKey","year","url","data","get","results","total_pages","window","scroll","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport Genres from \"../../components/Genres\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport useGenre from \"../../hooks/useGenre\";\n\nconst Movies = () => {\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const genreforURL = useGenre(selectedGenres);\n  // console.log(selectedGenres);\n\n  const fetchMovies = async () => {\n    const apiKey = \"d310343\"; // Replace with your actual OMDb API key\n    const year = \"2021\"; // Example year filter\n    const page = 1; // Pagination if needed\n    const url = `http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&y=${year}&page=${page}`;\n    const { data } = await axios.get(\n      `http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&y=${year}&page=${page}`\n    );\n\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchMovies();\n    // eslint-disable-next-line\n  }, [genreforURL, page]);\n  return (\n    <div>\n      <span className=\"pageTitle\"> ðŸ”¥ðŸ”¥play moviesðŸ”¥ðŸ”¥</span>\n      <Genres\n        type=\"movie\"\n        selectedGenres={selectedGenres}\n        setSelectedGenres={setSelectedGenres}\n        genres={genres}\n        setGenres={setGenres}\n        setPage={setPage}\n      />\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.id}\n              id={c.id}\n              poster={c.poster_path}\n              title={c.title || c.name}\n              date={c.first_air_date || c.release_date}\n              media_type=\"movie\"\n              vote_average={c.vote_average}\n            />\n          ))}\n      </div>\n      {numOfPages > 1 && (\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n      )}\n    </div>\n  );\n};\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}
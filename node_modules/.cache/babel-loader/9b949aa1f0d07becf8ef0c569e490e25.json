{"ast":null,"code":"var _jsxFileName = \"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Series/Series.js\",\n    _s = $RefreshSig$();\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import Genres from \"../../components/Genres\";\n// import CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\"; // import useGenre from \"../../hooks/useGenre\";\n// const Series = () => {\n//   const [genres, setGenres] = useState([]);\n//   const [selectedGenres, setSelectedGenres] = useState([]);\n//   const [page, setPage] = useState(1);\n//   const [content, setContent] = useState([]);\n//   const [numOfPages, setNumOfPages] = useState();\n//   const genreforURL = useGenre(selectedGenres);\n//   const fetchSeries = async () => {\n//     const { data } = await axios.get(\n//       `https://api.themoviedb.org/3/discover/tv?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\n//     );\n//     setContent(data.results);\n//     setNumOfPages(data.total_pages);\n//     // console.log(data);\n//   };\n//   useEffect(() => {\n//     window.scroll(0, 0);\n//     fetchSeries();\n//     // eslint-disable-next-line\n//   }, [genreforURL, page]);\n//   return (\n//     <div>\n//       <span className=\"pageTitle\">ðŸ”¥ðŸ”¥Enjoy your best SeriesðŸ”¥ðŸ”¥</span>\n//       <Genres\n//         type=\"tv\"\n//         selectedGenres={selectedGenres}\n//         setSelectedGenres={setSelectedGenres}\n//         genres={genres}\n//         setGenres={setGenres}\n//         setPage={setPage}\n//       />\n//       <div className=\"trending\">\n//         {content &&\n//           content.map((c) => (\n//             <SingleContent\n//               key={c.id}\n//               id={c.id}\n//               poster={c.poster_path}\n//               title={c.title || c.name}\n//               date={c.first_air_date || c.release_date}\n//               media_type=\"tv\"\n//               vote_average={c.vote_average}\n//             />\n//           ))}\n//       </div>\n//       {numOfPages > 1 && (\n//         <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n//       )}\n//     </div>\n//   );\n// };\n// export default Series;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // If you are using React Router for navigation\n//import \"./SavedMoviesPage.css\"; // Optional: for custom styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SavedMoviesPage() {\n  _s();\n\n  const [savedMovies, setSavedMovies] = useState([]); // Fetch saved movies from localStorage\n\n  useEffect(() => {\n    const savedMoviesFromStorage = JSON.parse(localStorage.getItem(\"savedMovies\")) || [];\n    setSavedMovies(savedMoviesFromStorage);\n  }, []);\n  console.log(\"ass1111\", savedMovies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"saved-movies-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Saved Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), savedMovies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No saved movies found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pageTitle\",\n        children: \"\\uD83D\\uDD25\\uD83D\\uDD25Enjoy your best Series\\uD83D\\uDD25\\uD83D\\uDD25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trending\",\n        children: savedMovies && savedMovies.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n          id: c.imdbID,\n          poster: c.Poster,\n          title: c.Title || c.name,\n          date: c.first_air_date || c.Year,\n          media_type: c.Type,\n          vote_average: c.vote_average\n        }, c.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n} // return (\n//   <div>\n//     <span className=\"pageTitle\">ðŸ”¥ðŸ”¥Enjoy your best SeriesðŸ”¥ðŸ”¥</span>\n//     <div className=\"trending\">\n//       {savedMovies &&\n//         savedMovies.map((c) => (\n//           <SingleContent\n//             key={c.imdbID}\n//             id={c.imdbID}\n//             poster={c.Poster}\n//             title={c.Title || c.name}\n//             date={c.first_air_date || c.Year}\n//             media_type={c.Type}\n//             vote_average={c.vote_average}\n//           />\n//         ))}\n//     </div>\n//     {/* {numOfPages > 1 && (\n//       <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n//     )} */}\n//   </div>\n// );\n//};\n\n_s(SavedMoviesPage, \"hyXSSRsDN8gvLskXneXy4WKyLhI=\");\n\n_c = SavedMoviesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedMoviesPage\");","map":{"version":3,"sources":["/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Series/Series.js"],"names":["SingleContent","React","useEffect","useState","Link","SavedMoviesPage","savedMovies","setSavedMovies","savedMoviesFromStorage","JSON","parse","localStorage","getItem","console","log","length","map","c","imdbID","Poster","Title","name","first_air_date","Year","Type","vote_average"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAOA,aAAP,MAA0B,8CAA1B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAAyC;AACzC;;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CADwC,CAGxC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,sBAAsB,GAC1BC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,KAAmD,EADrD;AAEAL,IAAAA,cAAc,CAACC,sBAAD,CAAd;AACD,GAJQ,EAIN,EAJM,CAAT;AAKAK,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,WAAvB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,CAACS,MAAZ,KAAuB,CAAvB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACGT,WAAW,IACVA,WAAW,CAACU,GAAZ,CAAiBC,CAAD,iBACd,QAAC,aAAD;AAEE,UAAA,EAAE,EAAEA,CAAC,CAACC,MAFR;AAGE,UAAA,MAAM,EAAED,CAAC,CAACE,MAHZ;AAIE,UAAA,KAAK,EAAEF,CAAC,CAACG,KAAF,IAAWH,CAAC,CAACI,IAJtB;AAKE,UAAA,IAAI,EAAEJ,CAAC,CAACK,cAAF,IAAoBL,CAAC,CAACM,IAL9B;AAME,UAAA,UAAU,EAAEN,CAAC,CAACO,IANhB;AAOE,UAAA,YAAY,EAAEP,CAAC,CAACQ;AAPlB,WACOR,CAAC,CAACC,MADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,C,CACD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAhEwBb,e;;KAAAA,e","sourcesContent":["// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import Genres from \"../../components/Genres\";\n// import CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\n// import useGenre from \"../../hooks/useGenre\";\n\n// const Series = () => {\n//   const [genres, setGenres] = useState([]);\n//   const [selectedGenres, setSelectedGenres] = useState([]);\n//   const [page, setPage] = useState(1);\n//   const [content, setContent] = useState([]);\n//   const [numOfPages, setNumOfPages] = useState();\n//   const genreforURL = useGenre(selectedGenres);\n\n//   const fetchSeries = async () => {\n//     const { data } = await axios.get(\n//       `https://api.themoviedb.org/3/discover/tv?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\n//     );\n//     setContent(data.results);\n//     setNumOfPages(data.total_pages);\n//     // console.log(data);\n//   };\n\n//   useEffect(() => {\n//     window.scroll(0, 0);\n//     fetchSeries();\n//     // eslint-disable-next-line\n//   }, [genreforURL, page]);\n\n//   return (\n//     <div>\n//       <span className=\"pageTitle\">ðŸ”¥ðŸ”¥Enjoy your best SeriesðŸ”¥ðŸ”¥</span>\n//       <Genres\n//         type=\"tv\"\n//         selectedGenres={selectedGenres}\n//         setSelectedGenres={setSelectedGenres}\n//         genres={genres}\n//         setGenres={setGenres}\n//         setPage={setPage}\n//       />\n//       <div className=\"trending\">\n//         {content &&\n//           content.map((c) => (\n//             <SingleContent\n//               key={c.id}\n//               id={c.id}\n//               poster={c.poster_path}\n//               title={c.title || c.name}\n//               date={c.first_air_date || c.release_date}\n//               media_type=\"tv\"\n//               vote_average={c.vote_average}\n//             />\n//           ))}\n//       </div>\n//       {numOfPages > 1 && (\n//         <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Series;\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // If you are using React Router for navigation\n//import \"./SavedMoviesPage.css\"; // Optional: for custom styling\n\nexport default function SavedMoviesPage() {\n  const [savedMovies, setSavedMovies] = useState([]);\n\n  // Fetch saved movies from localStorage\n  useEffect(() => {\n    const savedMoviesFromStorage =\n      JSON.parse(localStorage.getItem(\"savedMovies\")) || [];\n    setSavedMovies(savedMoviesFromStorage);\n  }, []);\n  console.log(\"ass1111\", savedMovies);\n  return (\n    <div className=\"saved-movies-page\">\n      <h1>Saved Movies</h1>\n      {savedMovies.length === 0 ? (\n        <p>No saved movies found!</p>\n      ) : (\n        <div>\n          <span className=\"pageTitle\">ðŸ”¥ðŸ”¥Enjoy your best SeriesðŸ”¥ðŸ”¥</span>\n\n          <div className=\"trending\">\n            {savedMovies &&\n              savedMovies.map((c) => (\n                <SingleContent\n                  key={c.imdbID}\n                  id={c.imdbID}\n                  poster={c.Poster}\n                  title={c.Title || c.name}\n                  date={c.first_air_date || c.Year}\n                  media_type={c.Type}\n                  vote_average={c.vote_average}\n                />\n              ))}\n          </div>\n          {/* {numOfPages > 1 && (\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n      )} */}\n        </div>\n      )}\n    </div>\n  );\n}\n// return (\n//   <div>\n//     <span className=\"pageTitle\">ðŸ”¥ðŸ”¥Enjoy your best SeriesðŸ”¥ðŸ”¥</span>\n\n//     <div className=\"trending\">\n//       {savedMovies &&\n//         savedMovies.map((c) => (\n//           <SingleContent\n//             key={c.imdbID}\n//             id={c.imdbID}\n//             poster={c.Poster}\n//             title={c.Title || c.name}\n//             date={c.first_air_date || c.Year}\n//             media_type={c.Type}\n//             vote_average={c.vote_average}\n//           />\n//         ))}\n//     </div>\n//     {/* {numOfPages > 1 && (\n//       <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n//     )} */}\n//   </div>\n// );\n//};\n"]},"metadata":{},"sourceType":"module"}
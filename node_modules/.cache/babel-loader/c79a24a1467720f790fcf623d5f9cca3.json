{"ast":null,"code":"var _jsxFileName = \"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Series/Series.js\",\n    _s = $RefreshSig$();\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import Genres from \"../../components/Genres\";\n// import CustomPagination from \"../../components/Pagination/CustomPagination\";\n// import SingleContent from \"../../components/SingleContent/SingleContent\";\n// import useGenre from \"../../hooks/useGenre\";\n// const Series = () => {\n//   const [genres, setGenres] = useState([]);\n//   const [selectedGenres, setSelectedGenres] = useState([]);\n//   const [page, setPage] = useState(1);\n//   const [content, setContent] = useState([]);\n//   const [numOfPages, setNumOfPages] = useState();\n//   const genreforURL = useGenre(selectedGenres);\n//   const fetchSeries = async () => {\n//     const { data } = await axios.get(\n//       `https://api.themoviedb.org/3/discover/tv?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\n//     );\n//     setContent(data.results);\n//     setNumOfPages(data.total_pages);\n//     // console.log(data);\n//   };\n//   useEffect(() => {\n//     window.scroll(0, 0);\n//     fetchSeries();\n//     // eslint-disable-next-line\n//   }, [genreforURL, page]);\n//   return (\n//     <div>\n//       <span className=\"pageTitle\">ğŸ”¥ğŸ”¥Enjoy your best SeriesğŸ”¥ğŸ”¥</span>\n//       <Genres\n//         type=\"tv\"\n//         selectedGenres={selectedGenres}\n//         setSelectedGenres={setSelectedGenres}\n//         genres={genres}\n//         setGenres={setGenres}\n//         setPage={setPage}\n//       />\n//       <div className=\"trending\">\n//         {content &&\n//           content.map((c) => (\n//             <SingleContent\n//               key={c.id}\n//               id={c.id}\n//               poster={c.poster_path}\n//               title={c.title || c.name}\n//               date={c.first_air_date || c.release_date}\n//               media_type=\"tv\"\n//               vote_average={c.vote_average}\n//             />\n//           ))}\n//       </div>\n//       {numOfPages > 1 && (\n//         <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n//       )}\n//     </div>\n//   );\n// };\n// export default Series;\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // If you are using React Router for navigation\n//import \"./SavedMoviesPage.css\"; // Optional: for custom styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SavedMoviesPage() {\n  _s();\n\n  const [savedMovies, setSavedMovies] = useState([]); // Fetch saved movies from localStorage\n\n  useEffect(() => {\n    const savedMoviesFromStorage = JSON.parse(localStorage.getItem(\"savedMovies\")) || [];\n    setSavedMovies(savedMoviesFromStorage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"saved-movies-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Saved Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), savedMovies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No saved movies found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-movies-list\",\n      children: savedMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-movie\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster !== \"N/A\" ? movie.Poster : \"https://via.placeholder.com/500\",\n          alt: movie.Title,\n          className: \"saved-movie-poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saved-movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Year: \", movie.Year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${movie.imdbID}`,\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SavedMoviesPage, \"hyXSSRsDN8gvLskXneXy4WKyLhI=\");\n\n_c = SavedMoviesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedMoviesPage\");","map":{"version":3,"sources":["/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Series/Series.js"],"names":["React","useEffect","useState","Link","SavedMoviesPage","savedMovies","setSavedMovies","savedMoviesFromStorage","JSON","parse","localStorage","getItem","length","map","movie","Poster","Title","Year","imdbID"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAAyC;AACzC;;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CADwC,CAGxC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,sBAAsB,GAC1BC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,KAAmD,EADrD;AAEAL,IAAAA,cAAc,CAACC,sBAAD,CAAd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,WAAW,CAACO,MAAZ,KAAuB,CAAvB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACGP,WAAW,CAACQ,GAAZ,CAAiBC,KAAD,iBACf;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAA,gCACE;AACE,UAAA,GAAG,EACDA,KAAK,CAACC,MAAN,KAAiB,KAAjB,GACID,KAAK,CAACC,MADV,GAEI,iCAJR;AAME,UAAA,GAAG,EAAED,KAAK,CAACE,KANb;AAOE,UAAA,SAAS,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAA,sBAAKF,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,iCAAUF,KAAK,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASH,KAAK,CAACI,MAAO,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAAUJ,KAAK,CAACI,MAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAvCuBd,e;;KAAAA,e","sourcesContent":["// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import Genres from \"../../components/Genres\";\n// import CustomPagination from \"../../components/Pagination/CustomPagination\";\n// import SingleContent from \"../../components/SingleContent/SingleContent\";\n// import useGenre from \"../../hooks/useGenre\";\n\n// const Series = () => {\n//   const [genres, setGenres] = useState([]);\n//   const [selectedGenres, setSelectedGenres] = useState([]);\n//   const [page, setPage] = useState(1);\n//   const [content, setContent] = useState([]);\n//   const [numOfPages, setNumOfPages] = useState();\n//   const genreforURL = useGenre(selectedGenres);\n\n//   const fetchSeries = async () => {\n//     const { data } = await axios.get(\n//       `https://api.themoviedb.org/3/discover/tv?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\n//     );\n//     setContent(data.results);\n//     setNumOfPages(data.total_pages);\n//     // console.log(data);\n//   };\n\n//   useEffect(() => {\n//     window.scroll(0, 0);\n//     fetchSeries();\n//     // eslint-disable-next-line\n//   }, [genreforURL, page]);\n\n//   return (\n//     <div>\n//       <span className=\"pageTitle\">ğŸ”¥ğŸ”¥Enjoy your best SeriesğŸ”¥ğŸ”¥</span>\n//       <Genres\n//         type=\"tv\"\n//         selectedGenres={selectedGenres}\n//         setSelectedGenres={setSelectedGenres}\n//         genres={genres}\n//         setGenres={setGenres}\n//         setPage={setPage}\n//       />\n//       <div className=\"trending\">\n//         {content &&\n//           content.map((c) => (\n//             <SingleContent\n//               key={c.id}\n//               id={c.id}\n//               poster={c.poster_path}\n//               title={c.title || c.name}\n//               date={c.first_air_date || c.release_date}\n//               media_type=\"tv\"\n//               vote_average={c.vote_average}\n//             />\n//           ))}\n//       </div>\n//       {numOfPages > 1 && (\n//         <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Series;\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // If you are using React Router for navigation\n//import \"./SavedMoviesPage.css\"; // Optional: for custom styling\n\nexport default function SavedMoviesPage() {\n  const [savedMovies, setSavedMovies] = useState([]);\n\n  // Fetch saved movies from localStorage\n  useEffect(() => {\n    const savedMoviesFromStorage =\n      JSON.parse(localStorage.getItem(\"savedMovies\")) || [];\n    setSavedMovies(savedMoviesFromStorage);\n  }, []);\n\n  return (\n    <div className=\"saved-movies-page\">\n      <h1>Saved Movies</h1>\n      {savedMovies.length === 0 ? (\n        <p>No saved movies found!</p>\n      ) : (\n        <div className=\"saved-movies-list\">\n          {savedMovies.map((movie) => (\n            <div key={movie.imdbID} className=\"saved-movie\">\n              <img\n                src={\n                  movie.Poster !== \"N/A\"\n                    ? movie.Poster\n                    : \"https://via.placeholder.com/500\"\n                }\n                alt={movie.Title}\n                className=\"saved-movie-poster\"\n              />\n              <div className=\"saved-movie-details\">\n                <h2>{movie.Title}</h2>\n                <p>Year: {movie.Year}</p>\n                <Link to={`/movie/${movie.imdbID}`}>View Details</Link>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
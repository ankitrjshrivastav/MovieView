{"ast":null,"code":"var _jsxFileName = \"/Users/ankitraj/Desktop/react.js/entertain-hub/src/pages/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport Genres from \"../../components/Genres\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const genreforURL = useGenre(selectedGenres); // console.log(selectedGenres);\n\n  const fetchMovies = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchMovies(); // eslint-disable-next-line\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \" \\uD83D\\uDD25\\uD83D\\uDD25play movies\\uD83D\\uDD25\\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"movie\",\n      selectedGenres: selectedGenres,\n      setSelectedGenres: setSelectedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: \"movie\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Movies, \"XK1YKfc94s2l+Ob0biLUcn7v/6s=\", true);\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/ankitraj/Desktop/react.js/entertain-hub/src/pages/Movies/Movies.js"],"names":["axios","useEffect","useState","SingleContent","Genres","CustomPagination","Movies","genres","setGenres","selectedGenres","setSelectedGenres","page","setPage","content","setContent","numOfPages","setNumOfPages","genreforURL","useGenre","fetchMovies","data","get","results","total_pages","window","scroll","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,EAA5C;AACA,QAAMe,WAAW,GAAGC,QAAQ,CAACT,cAAD,CAA5B,CANmB,CAOnB;;AAGA,QAAMU,WAAW,GAAG,YAAY;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAACqB,GAAN,CACnB,4KAA2KV,IAAK,gBAAeM,WAAY,EADxL,CAAvB;AAICH,IAAAA,UAAU,CAACM,IAAI,CAACE,OAAN,CAAV;AACAN,IAAAA,aAAa,CAACI,IAAI,CAACG,WAAN,CAAb;AACA,GAPF;;AAQCtB,EAAAA,SAAS,CAAC,MAAM;AACfuB,IAAAA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACAN,IAAAA,WAAW,GAFI,CAGf;AACD,GAJS,EAIP,CAACR,IAAD,CAJO,CAAT;AAKC,sBACE;AAAA,4BACG;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,MAAD;AACD,MAAA,IAAI,EAAC,OADJ;AAED,MAAA,cAAc,EAAEF,cAFf;AAGD,MAAA,iBAAiB,EAAEC,iBAHlB;AAID,MAAA,MAAM,EAAEH,MAJP;AAKD,MAAA,SAAS,EAAEC,SALV;AAMD,MAAA,OAAO,EAAEI;AANR;AAAA;AAAA;AAAA;AAAA,YAFH,eAUG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACAC,OAAO,IACNA,OAAO,CAACa,GAAR,CAAaC,CAAD,iBACV,QAAC,aAAD;AAEE,QAAA,EAAE,EAAEA,CAAC,CAACC,EAFR;AAGE,QAAA,MAAM,EAAED,CAAC,CAACE,WAHZ;AAIE,QAAA,KAAK,EAAEF,CAAC,CAACG,KAAF,IAAWH,CAAC,CAACI,IAJtB;AAKE,QAAA,IAAI,EAAEJ,CAAC,CAACK,cAAF,IAAoBL,CAAC,CAACM,YAL9B;AAME,QAAA,UAAU,EAAC,OANb;AAOE,QAAA,YAAY,EAAEN,CAAC,CAACO;AAPlB,SACOP,CAAC,CAACC,EADT;AAAA;AAAA;AAAA;AAAA,cADF;AAFD;AAAA;AAAA;AAAA;AAAA,YAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAnDH;;GAAMtB,M;;KAAAA,M;AAoDJ,eAAgBA,MAAhB","sourcesContent":["\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport Genres from \"../../components/Genres\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nconst Movies = () => {\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const genreforURL = useGenre(selectedGenres);\n  // console.log(selectedGenres);\n\n\n  const fetchMovies = async () => {\n   const { data } = await axios.get(\n      `https://api.themoviedb.org/3/discover/movie?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\n    );\n    \n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n   };\n   useEffect(() => {\n    window.scroll(0, 0);\n    fetchMovies();\n    // eslint-disable-next-line\n  }, [page]);\n    return (\n      <div>\n         <span className=\"pageTitle\"> ğŸ”¥ğŸ”¥play moviesğŸ”¥ğŸ”¥</span>\n         <Genres\n        type=\"movie\"\n        selectedGenres={selectedGenres}\n        setSelectedGenres={setSelectedGenres}\n        genres={genres}\n        setGenres={setGenres}\n        setPage={setPage}\n      />\n         <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.id}\n              id={c.id}\n              poster={c.poster_path}\n              title={c.title || c.name}\n              date={c.first_air_date || c.release_date}\n              media_type=\"movie\"\n              vote_average={c.vote_average}\n            />\n          ))}\n      </div>\n      \n      </div>\n    );\n  };\n  export default  Movies;"]},"metadata":{},"sourceType":"module"}
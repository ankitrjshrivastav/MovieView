{"ast":null,"code":"import _asyncToGenerator from\"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/node_modules/@babel/runtime/regenerator/index.js\";import React from'react';import{Chip}from\"@material-ui/core\";import axios from\"axios\";import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Genres=function Genres(_ref){var selectedGenres=_ref.selectedGenres,setSelectedGenres=_ref.setSelectedGenres,genres=_ref.genres,setGenres=_ref.setGenres,type=_ref.type,setPage=_ref.setPage;var handleAdd=function handleAdd(genre){setSelectedGenres([].concat(_toConsumableArray(selectedGenres),[genre]));setGenres(genres.filter(function(g){return g.id!==genre.id;}));setPage(1);};var handleRemove=function handleRemove(genre){setSelectedGenres(selectedGenres.filter(function(selected){return selected.id!==genre.id;}));setGenres([].concat(_toConsumableArray(genres),[genre]));setPage(1);};var fetchGenres=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"https://api.themoviedb.org/3/genre/\".concat(type,\"/list?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US\"));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setGenres(data.genres);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchGenres(){return _ref2.apply(this,arguments);};}();//console.log(genres);\nuseEffect(function(){fetchGenres();return function(){setGenres({});// unmounting\n};// eslint-disable-next-line\n},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"6px 0\"},children:[selectedGenres&&selectedGenres.map(function(genre){return/*#__PURE__*/_jsx(Chip,{style:{margin:2},label:genre.name,color:\"primary\",clickable:true,size:\"small\",onDelete:function onDelete(){return handleRemove(genre);}},genre.id);}),genres&&genres.map(function(genre){return/*#__PURE__*/_jsx(Chip,{style:{margin:2},label:genre.name,clickable:true,size:\"small\",onClick:function onClick(){return handleAdd(genre);}},genre.id);})]});};export default Genres;","map":{"version":3,"sources":["/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/Genres.js"],"names":["React","Chip","axios","useEffect","Genres","selectedGenres","setSelectedGenres","genres","setGenres","type","setPage","handleAdd","genre","filter","g","id","handleRemove","selected","fetchGenres","get","data","padding","map","margin","name"],"mappings":"4aAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,OAA1B,C,wFAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAOT,IANEC,CAAAA,cAMF,MANEA,cAMF,CALEC,iBAKF,MALEA,iBAKF,CAJEC,MAIF,MAJEA,MAIF,CAHEC,SAGF,MAHEA,SAGF,CAFEC,IAEF,MAFEA,IAEF,CADEC,OACF,MADEA,OACF,CACF,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzBN,iBAAiB,8BAAKD,cAAL,GAAqBO,KAArB,GAAjB,CACAJ,SAAS,CAACD,MAAM,CAACM,MAAP,CAAc,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASH,KAAK,CAACG,EAAtB,EAAd,CAAD,CAAT,CACAL,OAAO,CAAC,CAAD,CAAP,CACD,CAJH,CAME,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAW,CAC9BN,iBAAiB,CACfD,cAAc,CAACQ,MAAf,CAAsB,SAACI,QAAD,QAAcA,CAAAA,QAAQ,CAACF,EAAT,GAAgBH,KAAK,CAACG,EAApC,EAAtB,CADe,CAAjB,CAGAP,SAAS,8BAAKD,MAAL,GAAaK,KAAb,GAAT,CACAF,OAAO,CAAC,CAAD,CAAP,CACD,CAND,CAQF,GAAMQ,CAAAA,WAAW,2FAAG,mLACOhB,CAAAA,KAAK,CAACiB,GAAN,8CACiBV,IADjB,kEADP,uCACRW,IADQ,kBACRA,IADQ,CAIhBZ,SAAS,CAACY,IAAI,CAACb,MAAN,CAAT,CAJgB,sDAAH,kBAAXW,CAAAA,WAAW,2CAAjB,CAOC;AACHf,SAAS,CAAC,UAAM,CACde,WAAW,GAEX,MAAO,WAAM,CACTV,SAAS,CAAC,EAAD,CAAT,CAAe;AAChB,CAFH,CAGE;AACD,CAPM,CAOJ,EAPI,CAAT,CASE,mBACE,aAAK,KAAK,CAAE,CAAEa,OAAO,CAAE,OAAX,CAAZ,WACGhB,cAAc,EAAIA,cAAc,CAACiB,GAAf,CAAmB,SAACV,KAAD,qBACpC,KAAC,IAAD,EACE,KAAK,CAAE,CAAEW,MAAM,CAAE,CAAV,CADT,CAEE,KAAK,CAAEX,KAAK,CAACY,IAFf,CAIE,KAAK,CAAC,SAJR,CAKE,SAAS,KALX,CAME,IAAI,CAAC,OANP,CAOC,QAAQ,CAAE,0BAAMR,CAAAA,YAAY,CAACJ,KAAD,CAAlB,EAPX,EAGOA,KAAK,CAACG,EAHb,CADoC,EAAnB,CADrB,CAYIR,MAAM,EAAIA,MAAM,CAACe,GAAP,CAAW,SAACV,KAAD,qBACrB,KAAC,IAAD,EACE,KAAK,CAAE,CAAEW,MAAM,CAAE,CAAV,CADT,CAEE,KAAK,CAAEX,KAAK,CAACY,IAFf,CAIE,SAAS,KAJX,CAKE,IAAI,CAAC,OALP,CAME,OAAO,CAAE,yBAAMb,CAAAA,SAAS,CAACC,KAAD,CAAf,EANX,EAGOA,KAAK,CAACG,EAHb,CADqB,EAAX,CAZd,GADF,CAyBH,CAhED,CAkEA,cAAeX,CAAAA,MAAf","sourcesContent":["import React from 'react';\nimport { Chip } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\n\nconst Genres = ({\n        selectedGenres,\n        setSelectedGenres,\n        genres,\n        setGenres,\n        type,\n        setPage,\n}) => {\n    const handleAdd = (genre) => {\n        setSelectedGenres([...selectedGenres, genre]);\n        setGenres(genres.filter((g) => g.id !== genre.id));\n        setPage(1);\n      };\n      \n      const handleRemove = (genre) => {\n        setSelectedGenres(\n          selectedGenres.filter((selected) => selected.id !== genre.id)\n        );\n        setGenres([...genres, genre]);\n        setPage(1);\n      };\n  \n    const fetchGenres = async () => {\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/genre/${type}/list?api_key=89c1beb1c605b68a9af79953628d7745&language=en-US`\n        );\n        setGenres(data.genres);\n      };\n  \n     //console.log(genres);\n  useEffect(() => {\n    fetchGenres();\n\n    return () => {\n        setGenres({}); // unmounting\n      };\n      // eslint-disable-next-line\n    }, []);\n  \n    return (\n      <div style={{ padding: \"6px 0\" }}>\n        {selectedGenres && selectedGenres.map((genre) => (\n          <Chip\n            style={{ margin: 2 }}\n            label={genre.name}\n            key={genre.id}\n            color=\"primary\"\n            clickable\n            size=\"small\"\n           onDelete={() => handleRemove(genre)}\n          />\n        ))}\n        { genres && genres.map((genre) => (\n          <Chip\n            style={{ margin: 2 }}\n            label={genre.name}\n            key={genre.id}\n            clickable\n            size=\"small\"\n            onClick={() => handleAdd(genre)}\n          />\n        ))}\n      </div>\n  );\n};\n\nexport default Genres;\n"]},"metadata":{},"sourceType":"module"}
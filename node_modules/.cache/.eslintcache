[{"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/index.js":"1","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/App.js":"2","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/MainNav.js":"3","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/Header/Header.js":"4","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Trending/Trending.js":"5","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Search/Search.js":"6","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/SingleContent/SingleContent.js":"7","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/hooks/useGenre.js":"8","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/Pagination/CustomPagination.js":"9","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/config/config.js":"10","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/ContentModal/ContentModal.js":"11","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/Genres.js":"12","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/SavedMovie/SavedMovie.js":"13"},{"size":172,"mtime":1645755364881,"results":"14","hashOfConfig":"15"},{"size":823,"mtime":1736412721019,"results":"16","hashOfConfig":"15"},{"size":1579,"mtime":1736412618635,"results":"17","hashOfConfig":"15"},{"size":211,"mtime":1736416145831,"results":"18","hashOfConfig":"15"},{"size":2748,"mtime":1736416184485,"results":"19","hashOfConfig":"15"},{"size":2239,"mtime":1736412407635,"results":"20","hashOfConfig":"15"},{"size":764,"mtime":1736416153413,"results":"21","hashOfConfig":"15"},{"size":225,"mtime":1736412631531,"results":"22","hashOfConfig":"15"},{"size":902,"mtime":1645762370612,"results":"23","hashOfConfig":"15"},{"size":527,"mtime":1645590240683,"results":"24","hashOfConfig":"15"},{"size":1706,"mtime":1736416234835,"results":"25","hashOfConfig":"15"},{"size":1799,"mtime":1736406423598,"results":"26","hashOfConfig":"15"},{"size":1200,"mtime":1736412771948,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"rymgr2",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/index.js",[],[],["72","73"],"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/App.js",[],[],"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/MainNav.js",[],[],"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/Header/Header.js",[],[],"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Trending/Trending.js",["74"],[],"import axios from \"axios\";\nimport \"./Trending.css\";\nimport { useEffect, useState } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport Genres from \"../../components/Genres\";\nimport useGenre from \"../../hooks/useGenre\";\nconst apiKey = \"d310343\";\nconst Trending = () => {\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const genreforURL = useGenre(selectedGenres);\n  const fetchTrending = async (year) => {\n    const { data } = await axios.get(\n      `http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&y=${year}&page=${page}`\n    );\n    return data.Search;\n  };\n\n  const fetchMoviesByYearRanges = async (ranges) => {\n    let combinedResults = [];\n    for (const range of ranges) {\n      const [startYear, endYear] = range;\n      for (let year = startYear; year <= endYear; year++) {\n        const movies = await fetchTrending(year);\n        combinedResults = [...combinedResults, ...movies];\n      }\n    }\n    return combinedResults;\n  };\n  const fetchTrendingfunc = async () => {\n    const parseYearRanges = (yearRangeString) => {\n      return yearRangeString.split(\",\").map((range) => {\n        const [start, end] = range.split(\"-\").map((year) => parseInt(year, 10));\n        return [start, end];\n      });\n    };\n    if (genreforURL.length === 0) {\n      const url = `http://www.omdbapi.com/?apikey=${apiKey}&s=movie&type=movie&page=${page}`;\n      const { data } = await axios.get(url);\n      setContent(data.Search);\n    } else {\n      const yearRanges = parseYearRanges(genreforURL);\n      const movies = await fetchMoviesByYearRanges(yearRanges);\n      setContent(movies);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchTrendingfunc();\n  }, [page, genreforURL]);\n\n  return (\n    <div>\n      <span className=\"pageTitle\"> ðŸ˜Ž Movies ðŸ˜œ </span>\n      <Genres\n        type=\"tv\"\n        selectedGenres={selectedGenres}\n        setSelectedGenres={setSelectedGenres}\n        genres={genres}\n        setGenres={setGenres}\n        setPage={setPage}\n      />\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.imdbID}\n              id={c.imdbID}\n              poster={c.Poster}\n              title={c.Title || c.name}\n              date={c.first_air_date || c.Year}\n              media_type={c.Type}\n              vote_average={c.vote_average}\n            />\n          ))}\n      </div>\n      <CustomPagination setPage={setPage} />\n    </div>\n  );\n};\n\nexport default Trending;\n","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/Search/Search.js",["75","76","77","78","79"],["80"],"import {\n  Button,\n  createMuiTheme,\n  Tab,\n  Tabs,\n  TextField,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport \"./Search.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\n\nconst Search = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\",\n      },\n    },\n  });\n\n  const fetchSearch = async () => {\n    try {\n      const apiKey = \"d310343\"; // Your OMDb API key\n      const { data } = await axios.get(\n        `http://www.omdbapi.com/?apikey=${apiKey}&s=${encodeURIComponent(\n          searchText\n        )}&type=movie&page=${page}`\n      );\n      setContent(data.Search);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSearch();\n    // eslint-disable-next-line\n  }, [page, searchText]);\n\n  return (\n    <div>\n      <ThemeProvider theme={darkTheme}>\n        <div className=\"search\">\n          <TextField\n            style={{ flex: 1 }}\n            className=\"searchBox\"\n            label=\"Search\"\n            variant=\"filled\"\n            onChange={(e) => setSearchText(e.target.value)}\n          />\n          <Button\n            onClick={fetchSearch}\n            variant=\"contained\"\n            style={{ marginLeft: 10 }}\n          >\n            <SearchIcon fontSize=\"large\" />\n          </Button>\n        </div>\n      </ThemeProvider>\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.imdbID}\n              id={c.imdbID}\n              poster={c.Poster}\n              title={c.Title || c.name}\n              date={c.first_air_date || c.Year}\n              media_type={c.Type}\n              vote_average={c.vote_average}\n            />\n          ))}\n        {searchText && !content && <h2>No Movies Found</h2>}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/SingleContent/SingleContent.js",[],[],"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/hooks/useGenre.js",[],[],"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/Pagination/CustomPagination.js",["81"],[],"import React, { Component } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\nconst CustomPagination = ({ setPage, numOfPages = 10 }) => {\n  // Scroll to top when page changes\n  const handlePageChange = (page) => {\n    setPage(page);\n    window.scroll(0, 0);\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: 10,\n      }}\n    >\n      <ThemeProvider theme={darkTheme}>\n    \n        <Pagination\n          onChange={(e) => handlePageChange(e.target.textContent)}\n          count={numOfPages}\n          color=\"primary\"\n          hideNextButton\n          hidePrevButton\n        />\n      </ThemeProvider>\n    </div>\n  );\n}\nexport default CustomPagination;","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/config/config.js",[],[],"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/ContentModal/ContentModal.js",["82","83","84","85"],["86"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ContentModal.css\";\n\nexport default function ContentModal({ children, media_type, id }) {\n  const [content, setContent] = useState();\n  const [savedMovieId, setSavedMovieId] = useState(null);\n  const [saved, setSaved] = useState(\"\");\n  const fetchData = async () => {\n    const { data } = await axios.get(\n      `http://www.omdbapi.com/?i=${id}&apikey=d310343`\n    );\n    setContent(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n    const savedMovie = localStorage.getItem(\"savedMovies\");\n\n    if (savedMovie) {\n      const movieData = JSON.parse(savedMovie);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const handleSaveToLocalStorage = () => {\n    if (content) {\n      const savedMovies = JSON.parse(localStorage.getItem(\"savedMovies\")) || [];\n\n      // If the movie is already saved, remove it\n      if (savedMovies.some((movie) => movie.imdbID === content.imdbID)) {\n        const updatedMovies = savedMovies.filter(\n          (movie) => movie && movie.imdbID !== content.imdbID\n        );\n\n        localStorage.setItem(\"savedMovies\", JSON.stringify(updatedMovies));\n        alert(\"Movie removed from saved list!\");\n      } else {\n        // If the movie is not saved, add it\n        savedMovies.push(content);\n        localStorage.setItem(\"savedMovies\", JSON.stringify(savedMovies));\n        alert(\"Movie saved successfully!\");\n      }\n\n      // Update the savedMovieId to reflect the current movie ID\n      setSavedMovieId(content.imdbID);\n    }\n  };\n\n  return (\n    <div>\n      <div type=\"button\" className=\"media\" onClick={handleSaveToLocalStorage}>\n        {children}\n      </div>\n    </div>\n  );\n}\n","/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/components/Genres.js",[],["87"],"/Users/ankitraj/Desktop/react.js/movies/entertain-hub/src/pages/SavedMovie/SavedMovie.js",[],[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":54,"column":6,"nodeType":"94","endLine":54,"endColumn":25,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":4,"column":3,"nodeType":"98","messageId":"99","endLine":4,"endColumn":6},{"ruleId":"96","severity":1,"message":"100","line":5,"column":3,"nodeType":"98","messageId":"99","endLine":5,"endColumn":7},{"ruleId":"96","severity":1,"message":"101","line":17,"column":16,"nodeType":"98","messageId":"99","endLine":17,"endColumn":23},{"ruleId":"96","severity":1,"message":"102","line":19,"column":10,"nodeType":"98","messageId":"99","endLine":19,"endColumn":20},{"ruleId":"96","severity":1,"message":"103","line":19,"column":22,"nodeType":"98","messageId":"99","endLine":19,"endColumn":35},{"ruleId":"92","severity":1,"message":"104","line":48,"column":6,"nodeType":"94","endLine":48,"endColumn":24,"suggestions":"105","suppressions":"106"},{"ruleId":"96","severity":1,"message":"107","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"108","line":7,"column":10,"nodeType":"98","messageId":"99","endLine":7,"endColumn":22},{"ruleId":"96","severity":1,"message":"109","line":8,"column":10,"nodeType":"98","messageId":"99","endLine":8,"endColumn":15},{"ruleId":"96","severity":1,"message":"110","line":8,"column":17,"nodeType":"98","messageId":"99","endLine":8,"endColumn":25},{"ruleId":"96","severity":1,"message":"111","line":21,"column":13,"nodeType":"98","messageId":"99","endLine":21,"endColumn":22},{"ruleId":"92","severity":1,"message":"112","line":24,"column":6,"nodeType":"94","endLine":24,"endColumn":8,"suggestions":"113","suppressions":"114"},{"ruleId":"92","severity":1,"message":"115","line":44,"column":8,"nodeType":"94","endLine":44,"endColumn":10,"suggestions":"116","suppressions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTrendingfunc'. Either include it or remove the dependency array.","ArrayExpression",["120"],"no-unused-vars","'Tab' is defined but never used.","Identifier","unusedVar","'Tabs' is defined but never used.","'setPage' is assigned a value but never used.","'numOfPages' is assigned a value but never used.","'setNumOfPages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSearch'. Either include it or remove the dependency array.",["121"],["122"],"'Component' is defined but never used.","'savedMovieId' is assigned a value but never used.","'saved' is assigned a value but never used.","'setSaved' is assigned a value but never used.","'movieData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["123"],["124"],"React Hook useEffect has missing dependencies: 'fetchGenres' and 'setGenres'. Either include them or remove the dependency array. If 'setGenres' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"kind":"131","justification":"132"},{"desc":"133","fix":"134"},{"kind":"131","justification":"132"},{"desc":"135","fix":"136"},{"kind":"131","justification":"132"},"Update the dependencies array to be: [page, genreforURL, fetchTrendingfunc]",{"range":"137","text":"138"},"Update the dependencies array to be: [fetchSearch, page, searchText]",{"range":"139","text":"140"},"directive","","Update the dependencies array to be: [fetchData]",{"range":"141","text":"142"},"Update the dependencies array to be: [fetchGenres, setGenres]",{"range":"143","text":"144"},[1939,1958],"[page, genreforURL, fetchTrendingfunc]",[1158,1176],"[fetchSearch, page, searchText]",[695,697],"[fetchData]",[1108,1110],"[fetchGenres, setGenres]"]